name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release type (major, minor, patch)'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      prerelease:
        description: 'Create as prerelease'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write

jobs:
  ci:
    uses: ./.github/workflows/ci.yml
    
  release:
    needs: ci
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Install dependencies
        run: npm ci
        
      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
      - name: Bump version
        id: bump_version
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
      - name: Update CHANGELOG
        run: |
          NEW_VERSION=${{ steps.bump_version.outputs.new_version }}
          DATE=$(date +%Y-%m-%d)
          
          # Create new changelog entry
          cat > CHANGELOG.tmp.md << EOF
          ## [v${NEW_VERSION}] - ${DATE}
          
          ### Added
          - Automated CI/CD pipeline with GitHub Actions
          - ESLint configuration for code quality
          - Automated deployment to GitHub Pages
          
          ### Changed
          - Updated build process for production deployment
          
          ### Fixed
          - Various bug fixes and improvements
          
          EOF
          
          # Append existing changelog if it exists
          if [ -f CHANGELOG.md ]; then
            echo "" >> CHANGELOG.tmp.md
            cat CHANGELOG.md >> CHANGELOG.tmp.md
          fi
          
          mv CHANGELOG.tmp.md CHANGELOG.md
          
      - name: Commit version bump
        run: |
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore: release v${{ steps.bump_version.outputs.new_version }}"
          
      - name: Create and push tag
        run: |
          git tag -a "v${{ steps.bump_version.outputs.new_version }}" -m "Release v${{ steps.bump_version.outputs.new_version }}"
          git push origin main
          git push origin "v${{ steps.bump_version.outputs.new_version }}"
          
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: release-artifacts/
          
      - name: Create release archive
        run: |
          cd release-artifacts
          zip -r ../week-planner-v${{ steps.bump_version.outputs.new_version }}.zip .
          cd ..
          
      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << EOF
          ## Week Planner v${{ steps.bump_version.outputs.new_version }}
          
          ### What's Changed
          - See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/v${{ steps.bump_version.outputs.new_version }}/CHANGELOG.md) for detailed changes
          
          ### Installation
          1. Download the release archive
          2. Extract to your desired location
          3. Open \`index.html\` in your browser
          
          ### Live Demo
          Visit: https://weekplanner.tools.dsebastien.net
          
          ### Full Changelog
          **From v${{ steps.current_version.outputs.version }} to v${{ steps.bump_version.outputs.new_version }}**
          EOF
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          name: v${{ steps.bump_version.outputs.new_version }}
          body_path: release_notes.md
          files: week-planner-v${{ steps.bump_version.outputs.new_version }}.zip
          prerelease: ${{ github.event.inputs.prerelease }}
          generate_release_notes: true